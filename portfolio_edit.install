<?php
function portfolio_edit_install() {
  // get the translation function relevant to our current localisation
  $t = get_t();
  // define the content type as an array (same as in hook_node_info())
  $portfolio_edit = array(
    'type' => 'portfolio',
    'name' => $t('Portfolio'),
	'has_title' => FALSE,
    'base' => 'node_content',
    'description' => $t('Content type to handle portfolios.'),
//    'body_label' => $t('portfolio_edit Description'),
    'promote' => 0,
    'status' => 1,
    'comment' => 0,
  );

  // set default values for anything not explicitly defined in the above array
  $content_type = node_type_set_defaults($portfolio_edit);

  // add the body field to the content type
//  node_add_body_field($content_type, 'Body');

  // create the content type
  node_type_save($content_type);

  variable_set('node_options_portfolio_edit', array('status'));
  // hide comments for this node. http://api.drupal.org/api/drupal/modules--comment--comment.module/7
  variable_set('comment_portfolio_edit', 'COMMENT_NODE_HIDDEN');

  // Hide date and author information
//  variable_set('node_submitted_portfolio_edit', FALSE);
 // Create all the fields we are adding to our content type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_portfolio_edit_installed_fields() as $field) {
    field_create_field($field);
  }
  
  foreach (_portfolio_edit_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'portfolio';
    field_create_instance($instance);
  }

}


function _portfolio_edit_installed_instances() {
  $t = get_t();
  $instances = array(
    // instance of the text field above
    'portfolio_header' => array(
      'field_name'  => 'portfolio_header',
      'label'       => $t('Main Title'),
      'cardinality' => 1,
      'widget'      => array(
        'type'       => 'text_textfield',
        'settings'   => array('size' => 60),
      ),
    ),
    'portfolio_header_2' => array(
      'field_name'  => 'portfolio_header_2',
      'label'       => $t('Second Title'),
      'cardinality' => 1,
      'widget'      => array(
        'type'       => 'text_textfield',
        'settings'   => array('size' => 60),
      ),
    ),
    // instance of the textarea field above
    'url' => array(
      'field_name'  => 'url',
      'label'       => $t('Website Address(URL)'),
      'cardinality' => 1,
      'widget'      => array(
        'type'       => 'text_textfield',
        'settings'   => array('rows' => 5),
      ),
    ),
 'footer' => array(
      'field_name'  => 'footer',
      'label'       => $t('Footer'),
      'cardinality' => 1,
      'widget'      => array(
        'type'       => 'text_textarea',
        'settings'   => array('rows' => 5),
      ),
    ),
 // instance of the textarea field above
    'pages' => array(
      'field_name'  => 'pages',
      'label'       => $t('Pages'),
      'cardinality' => 1,
      'widget'      => array(
        'type'       => 'text_textarea',
        'settings'   => array('rows' => 5),
      ),
    ),
  );
  return $instances;
}

function _portfolio_edit_installed_fields() {
  $t = get_t();
  $fields = array(
    'portfolio_header' => array(
      'field_name'   => 'portfolio_header',
      'label'        => $t('Main Title'),
      'cardinality'  => 1,
      'type'         => 'text',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ),    
	'portfolio_header_2' => array(
      'field_name'   => 'portfolio_header_2',
      'label'        => $t('Second Title'),
      'cardinality'  => 1,
      'type'         => 'text',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ),
    'url' => array(
      'field_name'   => 'url',
      'label'        => $t('Website Address(URL)'),
      'cardinality'  => 1,
      'type'         => 'text',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ), 
    // a text (textarea) field
    'pages' => array(
      'field_name'   => 'pages',
      'label'        => $t('Pages'),
      'cardinality'  => FIELD_CARDINALITY_UNLIMITED,
      'type'         => 'text',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ),	
	 'footer' => array(
      'field_name'   => 'footer',
      'label'        => $t('Footer'),
      'cardinality'  => 1,
      'type'         => 'text',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ),	

      
  );
  return $fields;
}

function portfolio_edit_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'article'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_portfolio_edit_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Delete our content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete('portfolio');

  // Purge all field information
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
?>